"""empty message

Revision ID: 5a6e6ac74094
Revises: 
Create Date: 2025-07-01 00:43:05.851557

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a6e6ac74094'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cities'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('firstname', sa.String(length=100), nullable=False),
    sa.Column('lastname', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('registration', sa.DateTime(), nullable=False),
    sa.Column('latestlogin', sa.DateTime(), nullable=True),
    sa.Column('previouslogin', sa.DateTime(), nullable=True),
    sa.Column('latestIP', sa.String(length=100), nullable=True),
    sa.Column('previousIP', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], name=op.f('fk_logs_userid_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_logs'))
    )
    op.create_table('parking_lots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('image_filename', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name=op.f('fk_parking_lots_city_id_cities')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parking_lots'))
    )
    op.create_table('parking_spots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parkingLotId', sa.Integer(), nullable=False),
    sa.Column('spotNumber', sa.String(length=20), nullable=False),
    sa.Column('svgCoords', sa.String(length=100), nullable=False),
    sa.Column('pricePerHour', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['parkingLotId'], ['parking_lots.id'], name=op.f('fk_parking_spots_parkingLotId_parking_lots')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_parking_spots'))
    )
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('parking_lot_id', sa.Integer(), nullable=False),
    sa.Column('spot_id', sa.Integer(), nullable=False),
    sa.Column('timeBooked', sa.DateTime(), nullable=False),
    sa.Column('bookingDate', sa.Date(), nullable=False),
    sa.Column('startTime', sa.Time(), nullable=False),
    sa.Column('endTime', sa.Time(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['parking_lot_id'], ['parking_lots.id'], name=op.f('fk_bookings_parking_lot_id_parking_lots')),
    sa.ForeignKeyConstraint(['spot_id'], ['parking_spots.id'], name=op.f('fk_bookings_spot_id_parking_spots')),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], name=op.f('fk_bookings_userid_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bookings'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookings')
    op.drop_table('parking_spots')
    op.drop_table('parking_lots')
    op.drop_table('logs')
    op.drop_table('users')
    op.drop_table('cities')
    # ### end Alembic commands ###
